{"ast":null,"code":"var _jsxFileName = \"/Users/Aditya/ConversationalAI_CRM_Attio/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Mic, MicOff } from 'lucide-react';\nimport './speech-recorder.css';\nimport { sendToAttio, initializeAttributeIds } from './advanced-attio.js';\nimport { sendToAdvancedDeepSeek, ConversationContext } from './advanced-parser.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdvancedSpeechRecorder = () => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [currentLines, setCurrentLines] = useState(['', '']);\n  const [previousLines, setPreviousLines] = useState(['', '']);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [processingStatus, setProcessingStatus] = useState('');\n  const [lastAnalysis, setLastAnalysis] = useState(null);\n  const [stats, setStats] = useState({\n    dealsProcessed: 0,\n    contactsManaged: 0,\n    tasksCreated: 0,\n    totalValue: 0\n  });\n  const recognitionRef = useRef(null);\n  const currentTextRef = useRef('');\n  const fullTranscriptRef = useRef('');\n  const triggeredRef = useRef(false);\n  const crmCaptureRef = useRef('');\n  const conversationContextRef = useRef(new ConversationContext());\n  const triggerPhrase = \"initiate CRM\";\n\n  // Initialize the advanced system\n  useEffect(() => {\n    const initializeSystem = async () => {\n      setProcessingStatus('Initializing advanced CRM system...');\n      try {\n        await initializeAttributeIds();\n        setProcessingStatus('✅ Advanced CRM system ready');\n        setTimeout(() => setProcessingStatus(''), 3000);\n      } catch (err) {\n        setProcessingStatus('❌ System initialization failed');\n        console.error('Initialization error:', err);\n      }\n    };\n    initializeSystem();\n  }, []);\n  const processAdvancedCRM = async text => {\n    setProcessingStatus('🧠 Analyzing conversation with AI...');\n    try {\n      // Get conversation context\n      const context = conversationContextRef.current.getContext();\n\n      // Send to advanced AI parser\n      const updates = await sendToAdvancedDeepSeek(text, context);\n      console.log('🎯 Advanced AI extracted:', updates);\n      if (updates.length === 0) {\n        setProcessingStatus('ℹ️ No actionable data found');\n        return;\n      }\n      setProcessingStatus('💾 Updating Attio CRM...');\n\n      // Send to Attio\n      await sendToAttio(updates);\n\n      // Update conversation context\n      conversationContextRef.current.updateContext(updates);\n\n      // Update stats and analysis\n      const dealUpdates = updates.filter(item => item.type === 'deal');\n      const personUpdates = updates.filter(item => item.type === 'person');\n      const taskUpdates = updates.filter(item => item.type === 'task');\n      const totalValue = dealUpdates.reduce((sum, deal) => sum + (deal.value || 0), 0);\n      setStats(prevStats => ({\n        dealsProcessed: prevStats.dealsProcessed + dealUpdates.length,\n        contactsManaged: prevStats.contactsManaged + personUpdates.length,\n        tasksCreated: prevStats.tasksCreated + taskUpdates.length,\n        totalValue: prevStats.totalValue + totalValue\n      }));\n      setLastAnalysis({\n        timestamp: new Date().toISOString(),\n        summary: generateAnalysisSummary(updates),\n        updates: updates\n      });\n      setProcessingStatus('✅ CRM updated successfully');\n      setTimeout(() => setProcessingStatus(''), 5000);\n    } catch (error) {\n      console.error('❌ Advanced CRM processing failed:', error);\n      setProcessingStatus('❌ Processing failed - check console');\n    }\n  };\n  const generateAnalysisSummary = updates => {\n    const deals = updates.filter(item => item.type === 'deal');\n    const people = updates.filter(item => item.type === 'person');\n    const tasks = updates.filter(item => item.type === 'task');\n    const relationships = updates.filter(item => item.type === 'relationship');\n    let summary = [];\n    if (deals.length > 0) {\n      const totalValue = deals.reduce((sum, deal) => sum + (deal.value || 0), 0);\n      summary.push(`${deals.length} deal(s) worth $${totalValue.toLocaleString()}`);\n    }\n    if (people.length > 0) {\n      const sentiments = people.map(p => p.sentiment).filter(Boolean);\n      const positiveSentiment = sentiments.filter(s => s === 'positive').length;\n      summary.push(`${people.length} contact(s), ${positiveSentiment} positive`);\n    }\n    if (tasks.length > 0) {\n      const highPriority = tasks.filter(t => t.priority === 'high').length;\n      summary.push(`${tasks.length} task(s), ${highPriority} high priority`);\n    }\n    if (relationships.length > 0) {\n      summary.push(`${relationships.length} relationship update(s)`);\n    }\n    return summary.join(' • ');\n  };\n  const updateLyricDisplay = text => {\n    const words = text.split(' ');\n    const wordsPerLine = 8;\n    if (words.length > wordsPerLine * 2) {\n      if (!isAnimating) {\n        setIsAnimating(true);\n        setPreviousLines([currentLines[0], currentLines[1]]);\n        const newLine1 = words.slice(-wordsPerLine * 2, -wordsPerLine).join(' ');\n        const newLine2 = words.slice(-wordsPerLine).join(' ');\n        setTimeout(() => {\n          setCurrentLines([newLine1, newLine2]);\n          setTimeout(() => {\n            setIsAnimating(false);\n            setTimeout(() => {\n              setPreviousLines(['', '']);\n            }, 500);\n          }, 100);\n        }, 50);\n        currentTextRef.current = newLine1 + ' ' + newLine2 + ' ';\n      }\n    } else {\n      const line1 = words.slice(0, wordsPerLine).join(' ');\n      const line2 = words.slice(wordsPerLine).join(' ');\n      setCurrentLines([line1, line2]);\n    }\n  };\n  const toggleRecording = async () => {\n    if (!isRecording) {\n      try {\n        await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        recognitionRef.current.start();\n        setIsRecording(true);\n        setCurrentLines(['', '']);\n        setPreviousLines(['', '']);\n        currentTextRef.current = '';\n        fullTranscriptRef.current = '';\n        triggeredRef.current = false;\n        crmCaptureRef.current = '';\n        setProcessingStatus('');\n      } catch (error) {\n        alert('Microphone access denied.');\n      }\n    } else {\n      setIsRecording(false);\n      if (recognitionRef.current) {\n        recognitionRef.current.onend = null;\n        recognitionRef.current.stop();\n      }\n      const finalText = crmCaptureRef.current.trim();\n      if (finalText.length > 10) {\n        console.log('🔁 Processing advanced CRM content:', finalText);\n        await processAdvancedCRM(finalText);\n      } else {\n        setProcessingStatus('ℹ️ No substantial CRM content captured');\n      }\n    }\n  };\n  useEffect(() => {\n    if (!('webkitSpeechRecognition' in window) && !('SpeechRecognition' in window)) {\n      alert('Speech recognition not supported.');\n      return;\n    }\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    recognitionRef.current = new SpeechRecognition();\n    recognitionRef.current.continuous = true;\n    recognitionRef.current.interimResults = true;\n    recognitionRef.current.lang = 'en-US';\n    recognitionRef.current.onresult = event => {\n      let interim = '',\n        final = '';\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const transcript = event.results[i][0].transcript;\n        if (event.results[i].isFinal) {\n          final += transcript + ' ';\n        } else {\n          interim += transcript;\n        }\n      }\n      const fullText = currentTextRef.current + final + interim;\n      updateLyricDisplay(fullText);\n      if (final) {\n        currentTextRef.current += final;\n        fullTranscriptRef.current += final + ' ';\n        const clean = final.toLowerCase().trim();\n        if (!triggeredRef.current && clean.includes(triggerPhrase.toLowerCase())) {\n          console.log(\"✅ Advanced CRM trigger detected\");\n          triggeredRef.current = true;\n          crmCaptureRef.current = '';\n          setProcessingStatus('🎯 CRM mode activated - listening for business intelligence...');\n        } else if (triggeredRef.current) {\n          crmCaptureRef.current += final + ' ';\n        }\n      }\n    };\n    recognitionRef.current.onerror = e => console.error('Speech error:', e.error);\n    recognitionRef.current.onend = () => {\n      if (isRecording) recognitionRef.current.start();\n    };\n    return () => {\n      var _recognitionRef$curre;\n      return (_recognitionRef$curre = recognitionRef.current) === null || _recognitionRef$curre === void 0 ? void 0 : _recognitionRef$curre.stop();\n    };\n  }, [isRecording]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"speech-recorder\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lyric-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `previous-lines ${isAnimating ? 'animating' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lyric-line\",\n          children: previousLines[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lyric-line\",\n          children: previousLines[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-lines\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lyric-line\",\n          children: currentLines[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lyric-line\",\n          children: currentLines[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gradient-overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleRecording,\n      className: `mic-button ${isRecording ? 'recording' : 'idle'}`,\n      children: [isRecording && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pulse-ring pulse-ping\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pulse-ring pulse-beat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mic-icon\",\n        children: isRecording ? /*#__PURE__*/_jsxDEV(MicOff, {\n          size: 32\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 50\n        }, this) : /*#__PURE__*/_jsxDEV(Mic, {\n          size: 32\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 73\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-text\",\n      children: isRecording ? 'Recording... say \"initiate CRM\" to start logging' : 'Click to start recording'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n};\n_s(AdvancedSpeechRecorder, \"yftbtt0LJkEzFLGZdlhwV/tApkM=\");\n_c = AdvancedSpeechRecorder;\nexport default AdvancedSpeechRecorder;\nvar _c;\n$RefreshReg$(_c, \"AdvancedSpeechRecorder\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Mic","MicOff","sendToAttio","initializeAttributeIds","sendToAdvancedDeepSeek","ConversationContext","jsxDEV","_jsxDEV","Fragment","_Fragment","AdvancedSpeechRecorder","_s","isRecording","setIsRecording","currentLines","setCurrentLines","previousLines","setPreviousLines","isAnimating","setIsAnimating","processingStatus","setProcessingStatus","lastAnalysis","setLastAnalysis","stats","setStats","dealsProcessed","contactsManaged","tasksCreated","totalValue","recognitionRef","currentTextRef","fullTranscriptRef","triggeredRef","crmCaptureRef","conversationContextRef","triggerPhrase","initializeSystem","setTimeout","err","console","error","processAdvancedCRM","text","context","current","getContext","updates","log","length","updateContext","dealUpdates","filter","item","type","personUpdates","taskUpdates","reduce","sum","deal","value","prevStats","timestamp","Date","toISOString","summary","generateAnalysisSummary","deals","people","tasks","relationships","push","toLocaleString","sentiments","map","p","sentiment","Boolean","positiveSentiment","s","highPriority","t","priority","join","updateLyricDisplay","words","split","wordsPerLine","newLine1","slice","newLine2","line1","line2","toggleRecording","navigator","mediaDevices","getUserMedia","audio","start","alert","onend","stop","finalText","trim","window","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","lang","onresult","event","interim","final","i","resultIndex","results","transcript","isFinal","fullText","clean","toLowerCase","includes","onerror","e","_recognitionRef$curre","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","_c","$RefreshReg$"],"sources":["/Users/Aditya/ConversationalAI_CRM_Attio/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Mic, MicOff } from 'lucide-react';\nimport './speech-recorder.css';\nimport { sendToAttio, initializeAttributeIds } from './advanced-attio.js';\nimport { sendToAdvancedDeepSeek, ConversationContext } from './advanced-parser.js';\n\nconst AdvancedSpeechRecorder = () => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [currentLines, setCurrentLines] = useState(['', '']);\n  const [previousLines, setPreviousLines] = useState(['', '']);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [processingStatus, setProcessingStatus] = useState('');\n  const [lastAnalysis, setLastAnalysis] = useState(null);\n  const [stats, setStats] = useState({\n    dealsProcessed: 0,\n    contactsManaged: 0,\n    tasksCreated: 0,\n    totalValue: 0\n  });\n\n  const recognitionRef = useRef(null);\n  const currentTextRef = useRef('');\n  const fullTranscriptRef = useRef('');\n  const triggeredRef = useRef(false);\n  const crmCaptureRef = useRef('');\n  const conversationContextRef = useRef(new ConversationContext());\n\n  const triggerPhrase = \"initiate CRM\";\n\n  // Initialize the advanced system\n  useEffect(() => {\n    const initializeSystem = async () => {\n      setProcessingStatus('Initializing advanced CRM system...');\n      try {\n        await initializeAttributeIds();\n        setProcessingStatus('✅ Advanced CRM system ready');\n        setTimeout(() => setProcessingStatus(''), 3000);\n      } catch (err) {\n        setProcessingStatus('❌ System initialization failed');\n        console.error('Initialization error:', err);\n      }\n    };\n    \n    initializeSystem();\n  }, []);\n\n  const processAdvancedCRM = async (text) => {\n    setProcessingStatus('🧠 Analyzing conversation with AI...');\n    \n    try {\n      // Get conversation context\n      const context = conversationContextRef.current.getContext();\n      \n      // Send to advanced AI parser\n      const updates = await sendToAdvancedDeepSeek(text, context);\n      console.log('🎯 Advanced AI extracted:', updates);\n      \n      if (updates.length === 0) {\n        setProcessingStatus('ℹ️ No actionable data found');\n        return;\n      }\n\n      setProcessingStatus('💾 Updating Attio CRM...');\n      \n      // Send to Attio\n      await sendToAttio(updates);\n      \n      // Update conversation context\n      conversationContextRef.current.updateContext(updates);\n      \n      // Update stats and analysis\n      const dealUpdates = updates.filter(item => item.type === 'deal');\n      const personUpdates = updates.filter(item => item.type === 'person');\n      const taskUpdates = updates.filter(item => item.type === 'task');\n      \n      const totalValue = dealUpdates.reduce((sum, deal) => sum + (deal.value || 0), 0);\n      \n      setStats(prevStats => ({\n        dealsProcessed: prevStats.dealsProcessed + dealUpdates.length,\n        contactsManaged: prevStats.contactsManaged + personUpdates.length,\n        tasksCreated: prevStats.tasksCreated + taskUpdates.length,\n        totalValue: prevStats.totalValue + totalValue\n      }));\n      \n      setLastAnalysis({\n        timestamp: new Date().toISOString(),\n        summary: generateAnalysisSummary(updates),\n        updates: updates\n      });\n      \n      setProcessingStatus('✅ CRM updated successfully');\n      setTimeout(() => setProcessingStatus(''), 5000);\n      \n    } catch (error) {\n      console.error('❌ Advanced CRM processing failed:', error);\n      setProcessingStatus('❌ Processing failed - check console');\n    }\n  };\n\n  const generateAnalysisSummary = (updates) => {\n    const deals = updates.filter(item => item.type === 'deal');\n    const people = updates.filter(item => item.type === 'person');\n    const tasks = updates.filter(item => item.type === 'task');\n    const relationships = updates.filter(item => item.type === 'relationship');\n    \n    let summary = [];\n    \n    if (deals.length > 0) {\n      const totalValue = deals.reduce((sum, deal) => sum + (deal.value || 0), 0);\n      summary.push(`${deals.length} deal(s) worth $${totalValue.toLocaleString()}`);\n    }\n    \n    if (people.length > 0) {\n      const sentiments = people.map(p => p.sentiment).filter(Boolean);\n      const positiveSentiment = sentiments.filter(s => s === 'positive').length;\n      summary.push(`${people.length} contact(s), ${positiveSentiment} positive`);\n    }\n    \n    if (tasks.length > 0) {\n      const highPriority = tasks.filter(t => t.priority === 'high').length;\n      summary.push(`${tasks.length} task(s), ${highPriority} high priority`);\n    }\n    \n    if (relationships.length > 0) {\n      summary.push(`${relationships.length} relationship update(s)`);\n    }\n    \n    return summary.join(' • ');\n  };\n\n  const updateLyricDisplay = (text) => {\n    const words = text.split(' ');\n    const wordsPerLine = 8;\n    if (words.length > wordsPerLine * 2) {\n      if (!isAnimating) {\n        setIsAnimating(true);\n        setPreviousLines([currentLines[0], currentLines[1]]);\n        const newLine1 = words.slice(-wordsPerLine * 2, -wordsPerLine).join(' ');\n        const newLine2 = words.slice(-wordsPerLine).join(' ');\n        setTimeout(() => {\n          setCurrentLines([newLine1, newLine2]);\n          setTimeout(() => {\n            setIsAnimating(false);\n            setTimeout(() => {\n              setPreviousLines(['', '']);\n            }, 500);\n          }, 100);\n        }, 50);\n        currentTextRef.current = newLine1 + ' ' + newLine2 + ' ';\n      }\n    } else {\n      const line1 = words.slice(0, wordsPerLine).join(' ');\n      const line2 = words.slice(wordsPerLine).join(' ');\n      setCurrentLines([line1, line2]);\n    }\n  };\n\n  const toggleRecording = async () => {\n    if (!isRecording) {\n      try {\n        await navigator.mediaDevices.getUserMedia({ audio: true });\n        recognitionRef.current.start();\n        setIsRecording(true);\n        setCurrentLines(['', '']);\n        setPreviousLines(['', '']);\n        currentTextRef.current = '';\n        fullTranscriptRef.current = '';\n        triggeredRef.current = false;\n        crmCaptureRef.current = '';\n        setProcessingStatus('');\n      } catch (error) {\n        alert('Microphone access denied.');\n      }\n    } else {\n      setIsRecording(false);\n      if (recognitionRef.current) {\n        recognitionRef.current.onend = null;\n        recognitionRef.current.stop();\n      }\n\n      const finalText = crmCaptureRef.current.trim();\n      if (finalText.length > 10) {\n        console.log('🔁 Processing advanced CRM content:', finalText);\n        await processAdvancedCRM(finalText);\n      } else {\n        setProcessingStatus('ℹ️ No substantial CRM content captured');\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (!('webkitSpeechRecognition' in window) && !('SpeechRecognition' in window)) {\n      alert('Speech recognition not supported.');\n      return;\n    }\n\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    recognitionRef.current = new SpeechRecognition();\n    recognitionRef.current.continuous = true;\n    recognitionRef.current.interimResults = true;\n    recognitionRef.current.lang = 'en-US';\n\n    recognitionRef.current.onresult = (event) => {\n      let interim = '', final = '';\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const transcript = event.results[i][0].transcript;\n        if (event.results[i].isFinal) {\n          final += transcript + ' ';\n        } else {\n          interim += transcript;\n        }\n      }\n\n      const fullText = currentTextRef.current + final + interim;\n      updateLyricDisplay(fullText);\n\n      if (final) {\n        currentTextRef.current += final;\n        fullTranscriptRef.current += final + ' ';\n\n        const clean = final.toLowerCase().trim();\n        if (!triggeredRef.current && clean.includes(triggerPhrase.toLowerCase())) {\n          console.log(\"✅ Advanced CRM trigger detected\");\n          triggeredRef.current = true;\n          crmCaptureRef.current = '';\n          setProcessingStatus('🎯 CRM mode activated - listening for business intelligence...');\n        }\n        else if (triggeredRef.current) {\n          crmCaptureRef.current += final + ' ';\n        }\n      }\n    };\n\n    recognitionRef.current.onerror = (e) => console.error('Speech error:', e.error);\n    recognitionRef.current.onend = () => {\n      if (isRecording) recognitionRef.current.start();\n    };\n\n    return () => recognitionRef.current?.stop();\n  }, [isRecording]);\n\n  return (\n    <div className=\"speech-recorder\">\n      <div className=\"lyric-display\">\n        <div className={`previous-lines ${isAnimating ? 'animating' : ''}`}>\n          <div className=\"lyric-line\">{previousLines[0]}</div>\n          <div className=\"lyric-line\">{previousLines[1]}</div>\n        </div>\n        <div className=\"current-lines\">\n          <div className=\"lyric-line\">{currentLines[0]}</div>\n          <div className=\"lyric-line\">{currentLines[1]}</div>\n        </div>\n        <div className=\"gradient-overlay\" />\n      </div>\n      <button onClick={toggleRecording} className={`mic-button ${isRecording ? 'recording' : 'idle'}`}>\n        {isRecording && <>\n          <div className=\"pulse-ring pulse-ping\"></div>\n          <div className=\"pulse-ring pulse-beat\"></div>\n        </>}\n        <div className=\"mic-icon\">{isRecording ? <MicOff size={32} /> : <Mic size={32} />}</div>\n      </button>\n      <div className=\"status-text\">\n        {isRecording ? 'Recording... say \"initiate CRM\" to start logging' : 'Click to start recording'}\n      </div>\n    </div>\n  );\n};\n\nexport default AdvancedSpeechRecorder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}