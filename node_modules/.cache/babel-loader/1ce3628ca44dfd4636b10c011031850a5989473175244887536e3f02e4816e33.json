{"ast":null,"code":"// attio.js\nconst ATTIO_API_BASE = \"https://api.attio.com/v2\";\nconst BEARER_TOKEN = \"Bearer YOUR_API_KEY_HERE\"; // replace in .env or securely\n\nlet objectMap = {}; // e.g., { person: 'obj_xxx' }\nlet attributeMap = {}; // e.g., { person: { name: 'attr_xxx' } }\n\nasync function fetchObjectsAndAttributes() {\n  const objRes = await fetch(`${ATTIO_API_BASE}/objects`, {\n    headers: {\n      Authorization: BEARER_TOKEN\n    }\n  });\n  const objData = await objRes.json();\n  for (const obj of objData.data) {\n    if (!obj.label) continue;\n    const label = obj.label.toLowerCase();\n    objectMap[label] = obj.id;\n    console.log(`üì¶ Found object: ${label} ‚Üí ${obj.id}`);\n    const attrRes = await fetch(`${ATTIO_API_BASE}/objects/${obj.id}/attributes`, {\n      headers: {\n        Authorization: BEARER_TOKEN\n      }\n    });\n    const attrData = await attrRes.json();\n    attributeMap[label] = {};\n    for (const attr of attrData.data) {\n      const key = attr.label.toLowerCase().replace(/\\s+/g, '_');\n      attributeMap[label][key] = attr.id;\n      console.log(`  ‚Ü≥ ${label} attr: ${key} ‚Üí ${attr.id}`);\n    }\n  }\n}\nasync function sendToAttio(updates) {\n  if (!Object.keys(objectMap).length) {\n    await fetchObjectsAndAttributes();\n  }\n  for (const item of updates) {\n    try {\n      switch (item.type) {\n        case \"person\":\n          await upsertPerson(item);\n          break;\n        case \"task\":\n          await createTask(item);\n          break;\n        case \"deal\":\n          await updateDeal(item);\n          break;\n        case \"competitor\":\n          await createCompetitor(item);\n          break;\n        default:\n          console.warn(\"Unknown item type:\", item);\n      }\n    } catch (err) {\n      console.error(\"‚ùå Failed to send item:\", item, err);\n    }\n  }\n}\nasync function upsertPerson(data) {\n  const id = objectMap[\"person\"];\n  const attrs = attributeMap[\"person\"];\n  if (!id || !attrs) return;\n  const values = {};\n  const [first, last] = (data.name || \"Unknown\").split(\" \");\n  if (attrs.first_name) values[attrs.first_name] = first;\n  if (attrs.last_name) values[attrs.last_name] = last || \"\";\n  if (data.notes && attrs.notes) values[attrs.notes] = data.notes;\n  if (data.priority && attrs.priority) values[attrs.priority] = data.priority;\n  await fetch(`${ATTIO_API_BASE}/objects/${id}/records`, {\n    method: \"POST\",\n    headers: {\n      Authorization: BEARER_TOKEN,\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      values\n    })\n  });\n}\nasync function createTask(data) {\n  const id = objectMap[\"task\"];\n  const attrs = attributeMap[\"task\"];\n  if (!id || !attrs) return;\n  const values = {};\n  if (attrs.title || attrs.description) {\n    values[attrs.title || attrs.description] = data.description;\n  }\n  if (data.due_date && attrs.due_date) {\n    values[attrs.due_date] = data.due_date;\n  }\n  if (data.due_time && attrs.due_time) {\n    values[attrs.due_time] = data.due_time;\n  }\n  await fetch(`${ATTIO_API_BASE}/objects/${id}/records`, {\n    method: \"POST\",\n    headers: {\n      Authorization: BEARER_TOKEN,\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      values\n    })\n  });\n}\nasync function updateDeal(data) {\n  const id = objectMap[\"deal\"];\n  const attrs = attributeMap[\"deal\"];\n  if (!id || !attrs) return;\n  const values = {};\n  if (data.value && attrs.value) values[attrs.value] = data.value;\n  if (data.close_date && attrs.close_date) values[attrs.close_date] = data.close_date;\n  if (data.forecast_confidence && attrs.forecast_confidence) values[attrs.forecast_confidence] = data.forecast_confidence;\n  if (data.pain_points && attrs.pain_points) values[attrs.pain_points] = data.pain_points;\n  if (data.decision_maker && attrs.decision_maker) values[attrs.decision_maker] = data.decision_maker;\n  await fetch(`${ATTIO_API_BASE}/objects/${id}/records`, {\n    method: \"POST\",\n    headers: {\n      Authorization: BEARER_TOKEN,\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      values\n    })\n  });\n}\nasync function createCompetitor(data) {\n  const id = objectMap[\"competitor\"];\n  const attrs = attributeMap[\"competitor\"];\n  if (!id || !attrs) return;\n  const values = {};\n  if (attrs.name) values[attrs.name] = data.name;\n  await fetch(`${ATTIO_API_BASE}/objects/${id}/records`, {\n    method: \"POST\",\n    headers: {\n      Authorization: BEARER_TOKEN,\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      values\n    })\n  });\n}\nexport { sendToAttio };","map":{"version":3,"names":["ATTIO_API_BASE","BEARER_TOKEN","objectMap","attributeMap","fetchObjectsAndAttributes","objRes","fetch","headers","Authorization","objData","json","obj","data","label","toLowerCase","id","console","log","attrRes","attrData","attr","key","replace","sendToAttio","updates","Object","keys","length","item","type","upsertPerson","createTask","updateDeal","createCompetitor","warn","err","error","attrs","values","first","last","name","split","first_name","last_name","notes","priority","method","body","JSON","stringify","title","description","due_date","due_time","value","close_date","forecast_confidence","pain_points","decision_maker"],"sources":["/Users/Aditya/ConversationalAI_CRM_Attio/src/attio.js"],"sourcesContent":["// attio.js\nconst ATTIO_API_BASE = \"https://api.attio.com/v2\";\nconst BEARER_TOKEN = \"Bearer YOUR_API_KEY_HERE\"; // replace in .env or securely\n\nlet objectMap = {};       // e.g., { person: 'obj_xxx' }\nlet attributeMap = {};    // e.g., { person: { name: 'attr_xxx' } }\n\nasync function fetchObjectsAndAttributes() {\n  const objRes = await fetch(`${ATTIO_API_BASE}/objects`, {\n    headers: { Authorization: BEARER_TOKEN },\n  });\n  const objData = await objRes.json();\n\n  for (const obj of objData.data) {\n    if (!obj.label) continue;\n    const label = obj.label.toLowerCase();\n    objectMap[label] = obj.id;\n    console.log(`üì¶ Found object: ${label} ‚Üí ${obj.id}`);\n\n    const attrRes = await fetch(`${ATTIO_API_BASE}/objects/${obj.id}/attributes`, {\n      headers: { Authorization: BEARER_TOKEN },\n    });\n    const attrData = await attrRes.json();\n    attributeMap[label] = {};\n\n    for (const attr of attrData.data) {\n      const key = attr.label.toLowerCase().replace(/\\s+/g, '_');\n      attributeMap[label][key] = attr.id;\n      console.log(`  ‚Ü≥ ${label} attr: ${key} ‚Üí ${attr.id}`);\n    }\n  }\n}\n\nasync function sendToAttio(updates) {\n  if (!Object.keys(objectMap).length) {\n    await fetchObjectsAndAttributes();\n  }\n\n  for (const item of updates) {\n    try {\n      switch (item.type) {\n        case \"person\":\n          await upsertPerson(item);\n          break;\n        case \"task\":\n          await createTask(item);\n          break;\n        case \"deal\":\n          await updateDeal(item);\n          break;\n        case \"competitor\":\n          await createCompetitor(item);\n          break;\n        default:\n          console.warn(\"Unknown item type:\", item);\n      }\n    } catch (err) {\n      console.error(\"‚ùå Failed to send item:\", item, err);\n    }\n  }\n}\n\nasync function upsertPerson(data) {\n  const id = objectMap[\"person\"];\n  const attrs = attributeMap[\"person\"];\n  if (!id || !attrs) return;\n\n  const values = {};\n  const [first, last] = (data.name || \"Unknown\").split(\" \");\n\n  if (attrs.first_name) values[attrs.first_name] = first;\n  if (attrs.last_name) values[attrs.last_name] = last || \"\";\n  if (data.notes && attrs.notes) values[attrs.notes] = data.notes;\n  if (data.priority && attrs.priority) values[attrs.priority] = data.priority;\n\n  await fetch(`${ATTIO_API_BASE}/objects/${id}/records`, {\n    method: \"POST\",\n    headers: {\n      Authorization: BEARER_TOKEN,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ values }),\n  });\n}\n\nasync function createTask(data) {\n  const id = objectMap[\"task\"];\n  const attrs = attributeMap[\"task\"];\n  if (!id || !attrs) return;\n\n  const values = {};\n  if (attrs.title || attrs.description) {\n    values[attrs.title || attrs.description] = data.description;\n  }\n  if (data.due_date && attrs.due_date) {\n    values[attrs.due_date] = data.due_date;\n  }\n  if (data.due_time && attrs.due_time) {\n    values[attrs.due_time] = data.due_time;\n  }\n\n  await fetch(`${ATTIO_API_BASE}/objects/${id}/records`, {\n    method: \"POST\",\n    headers: {\n      Authorization: BEARER_TOKEN,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ values }),\n  });\n}\n\nasync function updateDeal(data) {\n  const id = objectMap[\"deal\"];\n  const attrs = attributeMap[\"deal\"];\n  if (!id || !attrs) return;\n\n  const values = {};\n  if (data.value && attrs.value) values[attrs.value] = data.value;\n  if (data.close_date && attrs.close_date) values[attrs.close_date] = data.close_date;\n  if (data.forecast_confidence && attrs.forecast_confidence) values[attrs.forecast_confidence] = data.forecast_confidence;\n  if (data.pain_points && attrs.pain_points) values[attrs.pain_points] = data.pain_points;\n  if (data.decision_maker && attrs.decision_maker) values[attrs.decision_maker] = data.decision_maker;\n\n  await fetch(`${ATTIO_API_BASE}/objects/${id}/records`, {\n    method: \"POST\",\n    headers: {\n      Authorization: BEARER_TOKEN,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ values }),\n  });\n}\n\nasync function createCompetitor(data) {\n  const id = objectMap[\"competitor\"];\n  const attrs = attributeMap[\"competitor\"];\n  if (!id || !attrs) return;\n\n  const values = {};\n  if (attrs.name) values[attrs.name] = data.name;\n\n  await fetch(`${ATTIO_API_BASE}/objects/${id}/records`, {\n    method: \"POST\",\n    headers: {\n      Authorization: BEARER_TOKEN,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ values }),\n  });\n}\n\nexport { sendToAttio };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}